---
import { Picture } from "astro:assets"
import type { ImageMetadata } from "astro"

// i18n utilities and data
import { getCurrentLocale, createTranslationFunction, loadTranslations, getLocalizedPath } from "../i18n/utils";
import workshopsData from "../i18n/data/workshops.json";

// Load translations
await loadTranslations();

// Get current locale and translation function
const currentLocale = getCurrentLocale(Astro);
const t = createTranslationFunction(currentLocale);

// Define multilingual workshop types
interface MultilingualWorkshopSpeaker {
  id: string;
  name: {
    en: string;
    zh: string;
  };
  roleOrg: {
    en: string;
    zh: string;
  };
  image: string;
  tag: string;
  draft: boolean;
}

interface MultilingualCategory {
  name: {
    en: string;
    zh: string;
  };
  id: string;
}

// Filter speakers to only include those where draft is false and id is not "tbd"
const filteredSpeakers = workshopsData.speakers.filter(
  (speaker: MultilingualWorkshopSpeaker) => speaker.draft !== true && speaker.id !== "tbd"
)

// Import all images
const images = import.meta.glob<{ default: ImageMetadata }>(
  "images/speakers/*.{jpeg,jpg,png,gif}"
)
---

<div class="filter-container filter-alpha-animate">
  <div class="overlay overlay-dark" data-filter-toggle="close">
    <div class="close" data-filter-toggle="close">
      <div class="close-fill"></div>
      <div class="bar bar-top"></div>
      <div class="bar bar-bottom"></div>
    </div>
  </div>
  <div class="filter-box">
    <p>{t('workshops.filter')}:</p>
    <div class="filter-group" data-filter-group>
      {
        workshopsData.categories.map((category: MultilingualCategory) => (
          <div
            class="single-filter"
            data-filter-status={category.id === "all" ? "active" : "not-active"}
            data-filter-category={category.id}
          >
            <span>{category.name[currentLocale] || category.name.en}</span>
          </div>
        ))
      }
    </div>
  </div>
</div>

<section
  class="section section-speakers-grid"
  id="grid"
  data-filter-section
  data-theme-section="light"
  data-bg-section="lightblue"
  data-scroll-section
>
  <div class="container">
    <div class="row row-filter">
      <div class="col">
        <div class="filter-group" data-filter-group>
          {
            workshopsData.categories.map((category: MultilingualCategory) => (
              <div
                class="single-filter"
                data-filter-status={
                  category.id === "all" ? "active" : "not-active"
                }
                data-filter-category={category.id}
              >
                <span>{category.name[currentLocale] || category.name.en}</span>
              </div>
            ))
          }
        </div>
      </div>
    </div>

    <div class="row grid visible" data-filter-grid data-modal-grid>
      {
        filteredSpeakers.map((speaker: MultilingualWorkshopSpeaker, index) => (
          <div
            class="col"
            data-filter-status="active"
            data-filter-index={index}
            data-filter-index-even={index % 2 === 0}
            data-filter-category={speaker.tag}
          >
            <a
              href={getLocalizedPath(`/workshops/${speaker.id}/`, currentLocale)}
              class="single-speakers-card"
              data-modal-card-status="not-active"
              data-modal-card-id={speaker.id}
            >
              <div class="card-row card-row-image">
                <div class="card-image">
                  {speaker?.image &&
                    images[`/public/images/speakers/${speaker.image}`] && (
                      <Picture
                        src={images[
                          `/public/images/speakers/${speaker.image}`
                        ]()}
                        formats={["webp", "jpg"]}
                        alt={speaker.name[currentLocale] || speaker.name.en}
                        class="overlay speaker-img"
                        widths={[275, 400, 500, 600, 750, 900]}
                        sizes="(max-width: 700px) 58vw, 450px"
                        style="object-position: center 15% !important;"
                      />
                    )}
                </div>
              </div>
              <div class="card-row card-row-info">
                <h2 class="h5">{speaker.name[currentLocale] || speaker.name.en}</h2>
                <p>{speaker.roleOrg[currentLocale] || speaker.roleOrg.en}</p>
              </div>
            </a>
          </div>
        ))
      }
      <p style="text-align: center; width: 100%; margin: 1rem 0;">
        {t('workshops.speakers_subject_to_change')}
      </p>
    </div>
  </div>
</section>

<style>
  .card-image {
    position: relative;
    overflow: hidden;
    aspect-ratio: 1/1;
    width: 100%;
  }

  .speaker-img {
    object-fit: cover !important;
    height: 100%;
    width: 100%;
  }
</style>
