---
// Packages
import { Picture } from "astro:assets";

// Images
import why0 from "/public/images/venue/venue1.jpg";
import why2 from "/public/images/venue/venue2.jpg";
import why3 from "/public/images/venue/venue3.jpg";
import why4 from "/public/images/venue/venue4.jpg";

interface Props {
  introTitle?: string;
  introText?: string;
  programTitle?: string;
  programTitle2?: string;
  programDescription?: string;
  programDescription2?: string;
  finalistText?: string;
  ctaText?: string;
  ctaLink?: string;
  images?: Array<{
    src: any;
    alt: string;
  }>;
}

const {
  programTitle = "Hangzhou Platinum Hanjue Hotel",
  programTitle2 = "杭州白金汉爵酒店",
  programDescription = "No. 9, Shanshadong Road, Xihu District, Hangzhou City, Zhejiang Province",
  programDescription2 = "浙江省杭州市西湖区珊瑚沙东路9号",
  finalistText = "Located in Hangzhou’s scenic Xihu District near West Lake, the Hangzhou Platinum Hanjue Hotel is a premier venue for conferences and events. Spanning 170,000 m² with over 1,100 upscale guest rooms, it features 16 multifunctional banquet halls—including a grand 3,800 m² ballroom with 11-meter ceilings—capable of hosting up to 5,000 guests. The hotel offers full business amenities, onsite dining, ample parking, and convenient access to local landmarks, making it an ideal choice for both domestic and international gatherings.",
  images = [
    { src: why0, alt: "GOSIM Hangzhou Spotlight program highlight" },
    { src: why2, alt: "GOSIM Hangzhou Spotlight project showcase" },
    { src: why3, alt: "GOSIM Hangzhou Spotlight innovation" },
    { src: why4, alt: "GOSIM Hangzhou Spotlight community" },
  ],
} = Astro.props;
---

<div class="container">
  <!-- Program Overview -->
  <div class="row program-grid">
    <div class="col">
      <h2>{programTitle}</h2>
      <h2 class="program-title2">{programTitle2}</h2>
      <div class="program-description-container">
        <p class="program-description">{programDescription}</p>
        <p class="program-description">{programDescription2}</p>
      </div>
      <p class="finalist-text">
        {finalistText}
      </p>
    </div>

    <div class="col col-images">
      {
        images && images.length > 0 ? (
          <div class="image-grid">
            {images.map((image, index) => (
              <div class={`image-container image-${index + 1}`}>
                <Picture
                  src={image.src}
                  formats={["webp", "jpg"]}
                  alt={image.alt}
                  widths={[400, 800]}
                  sizes="(max-width: 767px) 100vw, 50vw"
                  class="image"
                />
              </div>
            ))}
            <div class="gradient-circle-wrap">
              <div class="gradient-circle" />
            </div>
          </div>
        ) : (
          <div class="image-grid">
            <div class="image-container image-1">
              <div class="placeholder-image" />
            </div>
            <div class="image-container image-2">
              <div class="placeholder-image" />
            </div>
            <div class="image-container image-3">
              <div class="placeholder-image" />
            </div>
            <div class="image-container image-4">
              <div class="placeholder-image" />
            </div>
          </div>
        )
      }
    </div>
  </div>
</div>

<style>
  .section-program-overview {
    padding: 4rem 0;
  }

  .intro-title {
    font-size: 2.5rem;
    font-weight: 600;
    line-height: 1.2;
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .program-title2 {
    font-size: 2rem;
    font-weight: 600;
    margin-top: 1.5rem;
  }

  .program-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 4rem;
  }

  .program-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
  }
  .program-description-container {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-top: 3rem;
    margin-bottom: 1rem;
    padding-left: 20px;
    position: relative;
    border-left: 2px solid var(--color-primary);
  }

  .program-description-container > * {
    position: relative;
    z-index: 1;
  }
  .program-description {
    font-size: 1.125rem;
  }

  .feature-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .feature-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    font-size: 1.25rem;
  }

  .check-icon {
    flex-shrink: 0;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 9999px;
    background-color: var(--color-primary);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .check-svg {
    width: 1rem;
    height: 1rem;
    color: white;
  }

  .link-primary {
    color: var(--color-primary);
    text-decoration: none;
    font-weight: 500;
  }

  .finalist-text {
    margin-top: 2rem;
    font-size: 1.125rem;
  }

  .link-arrow {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    color: var(--color-text);
    text-decoration: none;
    font-weight: 700;
    margin-top: 1.25rem;
  }

  .cta-container {
    margin-top: 2rem;
  }

  .col-images {
    padding-top: 4rem;
  }

  .image-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }

  .image-container {
    aspect-ratio: 1/1;
    border-radius: 0.75rem;
    overflow: hidden;
    z-index: 1;
  }

  .image-2,
  .image-4 {
    margin-top: -2rem;
  }

  .image,
  .placeholder-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .placeholder-image {
    background-color: var(--color-lightgray);
    height: 100%;
  }

  @media (min-width: 992px) {
    .program-grid {
      grid-template-columns: 1fr 1fr;
    }

    .image-grid {
      gap: 2rem;
    }
  }

  @media (max-width: 991px) {
    .intro-title {
      font-size: 2rem;
    }

    .intro-text {
      font-size: 1.125rem;
    }

    .col-images {
      padding-top: 2rem;
    }
  }

  @media (max-width: 767px) {
    .container-wide {
      padding: 0 1.5rem;
    }

    .intro-title {
      font-size: 1.75rem;
    }

    .intro-text {
      font-size: 1rem;
    }

    .image-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
</style>
